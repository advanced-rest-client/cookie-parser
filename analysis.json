{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "A Cookie object.\nIt is based on https://github.com/pillarjs/cookies/blob/master/lib/cookies.js",
      "summary": "",
      "path": "cookie-parser.js",
      "properties": [
        {
          "name": "maxAge",
          "type": "Number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "expires",
          "type": "Date",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "domain",
          "type": "String",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "toString",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Cookie's `name=value` string."
          }
        },
        {
          "name": "toHeader",
          "description": "Returns a Cookie as a HTTP header string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 204,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Cookie string as a HTTP header value"
          }
        },
        {
          "name": "toJSON",
          "description": "Override toJSON behaviour so it will eliminate\nall _* properies and replace it with a proper ones.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 2
            },
            "end": {
              "line": 221,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 36,
          "column": 7
        },
        "end": {
          "line": 222,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Cookie"
    },
    {
      "description": "A library to handle Cookie parsing.\nIt is based on https://github.com/pillarjs/cookies/blob/master/lib/cookies.js",
      "summary": "",
      "path": "cookie-parser.js",
      "properties": [
        {
          "name": "cookies",
          "type": "Array.<Cookie>",
          "description": "A list of parsed cookies.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "Cookies.parse(cookie)"
        },
        {
          "name": "url",
          "type": "String",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "_fillCookieAttributes",
          "description": "Clients must fill `path` and `domain` attribute if not set by the\nserver to match current request url.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "get",
          "description": "Get a cookie by name.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 365,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "String",
              "description": "Cookie name"
            }
          ],
          "return": {
            "type": "Cookie",
            "desc": "A Cookie object or null."
          }
        },
        {
          "name": "set",
          "description": "Adds a cookie to the list of cookies.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "String",
              "description": "Name of the cookie."
            },
            {
              "name": "value",
              "type": "String",
              "description": "Value of the cookie."
            },
            {
              "name": "opts",
              "type": "Object.<String, String>",
              "description": "Other cookie options to set."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toString",
          "description": "Returns a string that can be used in a HTTP header value for Cookie.\nThe structure of the cookie string depends on if you want to send a\ncookie from the server to client or other way around.\nWhen you want to send the `Cookie` header to server set\n`toServer` argument to true. Then it will produce only `name=value;`\nstring. Otherwise it will be the `Set-Cookie` header value\ncontaining all other cookies properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 2
            },
            "end": {
              "line": 405,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "toServer",
              "type": "Boolean",
              "description": "True if produced string is to be used with\n`Cookie` header"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "filter",
          "description": "Remove cookies from `this.cookies` that has been set for different\ndomain and path.\nThis function has no effect if the URL is not set.\n\nThis function follows an alghoritm defined in https://tools.ietf.org/html/rfc6265 for\ndomain match.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 2
            },
            "end": {
              "line": 447,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array.<Cookie>",
            "desc": "A list of removed cookies."
          }
        },
        {
          "name": "merge",
          "description": "Merges this cookies with another Cookies object.\nThis cookies will be overwritten by passed cookies according to\nthe HTTP spec.\nThis function is useful when you need to override cookies with\nthe response from the server\nas defined in the https://tools.ietf.org/html/rfc6265.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 2
            },
            "end": {
              "line": 512,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookies",
              "type": "Cookies",
              "description": "An Cookies object with newest cookies."
            },
            {
              "name": "copyKeys",
              "type": "(String | Array?)",
              "description": "If set, it will try copy values\nfor given keys from old object to the new one."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getPath",
          "description": "Gets the path for a domain as defined in\nhttps://tools.ietf.org/html/rfc6265#section-5.1.4",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 521,
              "column": 2
            },
            "end": {
              "line": 552,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "A url to extract path from."
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_matchPath",
          "description": "Checks if paths mach as defined in\nhttps://tools.ietf.org/html/rfc6265#section-5.1.4\n\nNote: This function will return false if the `this.url` was not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 563,
              "column": 2
            },
            "end": {
              "line": 590,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookiePath",
              "type": "String",
              "description": "Path from the cookie."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when paths matches."
          }
        },
        {
          "name": "_matchDomain",
          "description": "Checks if `domain` of the request url (defined as `this.url`)\nmatches domain defined in a cookie.\nThis follows algoritm defined in https://tools.ietf.org/html/rfc6265#section-5.1.3\n\nNote: If `cookieDomain` is not set it returns false, while\n(according to the spec) it should be set to `domain` and pass the test.\nBecause this function only check if domains matches it will not\noverride domain.\nCookie domain should be filled before calling this function.\n\nNote: This function will return false if the `this.url` was not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 607,
              "column": 2
            },
            "end": {
              "line": 636,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookieDomain",
              "type": "String",
              "description": "A domain received in the cookie."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if domains matches."
          }
        },
        {
          "name": "clearExpired",
          "description": "Clears cookies from `this.cookies` that already expired.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 642,
              "column": 2
            },
            "end": {
              "line": 657,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array.<Cookie>",
            "desc": "List of removed (expired) cookies."
          }
        }
      ],
      "staticMethods": [
        {
          "name": "parse",
          "description": "Parses a cookie string to a list of Cookie objects.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 2
            },
            "end": {
              "line": 322,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookies",
              "type": "String",
              "description": "A HTTP cookie string"
            }
          ],
          "return": {
            "type": "Array.<Cookie>",
            "desc": "List of parsed cookies."
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 228,
          "column": 7
        },
        "end": {
          "line": 658,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Cookies"
    }
  ]
}
